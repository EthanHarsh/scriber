{"version":3,"sources":["utils/mutations.js","utils/auth.js","pages/signIn.js","pages/signUp.js","utils/queries.js","pages/textEditor.js","components/NavBar.js","pages/home.js","pages/profile.js","pages/favorites.js","pages/read.js","App.js","reportWebVitals.js","index.js"],"names":["ADD_USER","gql","ADD_ENTRY","USER_LOGIN","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","theme","createTheme","SignIn","useMutation","loginUser","handleSubmit","error","data","event","a","preventDefault","FormData","currentTarget","console","log","email","get","password","variables","response","userLogin","Error","user","Auth","login","ThemeProvider","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","border","borderColor","padding","borderRadius","backgroundColor","Avatar","m","bgcolor","Typography","variant","onSubmit","noValidate","mt","TextField","margin","required","fullWidth","id","label","name","autoComplete","autoFocus","type","FormControlLabel","control","Checkbox","value","color","Button","mb","zIndex","elevation","Grid","container","item","xs","Link","href","SignUp","addUser","firstName","lastName","username","className","spacing","sm","justifyContent","QUERY_ENTRIES","ME","TOP_FIVE","WritePage","addEntry","entry","useQuery","loading","useState","setValue","speak","useSpeechSynthesis","handleSave","formData","JSON","stringify","me","hash","multiline","rows","defaultValue","onChange","target","width","ml","onClick","text","startIcon","drawerWidth","openedMixin","transition","transitions","create","easing","sharp","duration","enteringScreen","overflowX","closedMixin","leavingScreen","breakpoints","up","DrawerHeader","styled","mixins","toolbar","AppBar","MuiAppBar","shouldForwardProp","prop","open","drawer","marginLeft","Drawer","MuiDrawer","flexShrink","whiteSpace","boxSizing","MiniDrawer","useHistory","useTheme","React","setOpen","handleDrawerOpen","handleDrawerClose","position","background","borderBottom","Toolbar","IconButton","edge","marginRight","noWrap","direction","Divider","List","ListItem","button","ListItemIcon","ListItemText","primary","logout","flexGrow","p","accordionStyle","marginBottom","subjectStyle","ArticleAccordion","article","link","Accordion","AccordionSummary","expandIcon","title","subject","AccordionDetails","flexFlow","authors","HomePage","topFive","getTopFive","map","parse","savedEntries","FavoritePage","favoriteEntries","ReadPage","articleHash","useParams","getEntry","body","Copyright","align","getFullYear","App","exact","path","Read","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","concat","cache","InMemoryCache","ReactDOM","render","ApolloProvider","Fragment","document","getElementById"],"mappings":"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","file":"static/js/main.0678cb4e.chunk.js","sourcesContent":["import { gql } from '@apollo/client';\n\nexport const ADD_USER = gql`\nmutation Mutation($username: String!, $email: String!, $password: String!) {\n  addUser(username: $username, email: $email, password: $password) {\n    token\n    user {\n      username\n      email\n      savedEntries\n      favoriteEntries\n      visitedEntries\n      hash\n    }\n  }\n}\n`\n\nexport const ADD_ENTRY = gql`\nmutation Mutation($authors: String!, $title: String!, $body: String!, $subject: String) {\n  addEntry(authors: $authors, title: $title, body: $body, subject: $subject) {\n    authors\n    title\n    body\n    timestamp\n    subject\n    views\n    hash\n  }\n}\n`\n\nexport const EDIT_ENTRY = gql`\n    mutation EditEntryMutation($editEntryTitle: String!, $editEntryBody: String!, $editEntrySubject: String!) {\n        editEntry(title: $editEntryTitle, body: $editEntryBody, subject: $editEntrySubject) {\n            _id\n            authors\n            title\n            timestamp\n            body\n            subject\n            views\n        }\n    }\n`\n\nexport const DELETE_ENTRY = gql`\n    mutation DeleteEntryMutation($deleteEntryTitleId: ID!) {\n        deleteEntry(titleId: $deleteEntryTitleId) {\n            _id\n            authors\n            title\n            body\n            timestamp\n            subject\n            views\n        }\n    }\n`\n\nexport const USER_LOGIN = gql`\nmutation Mutation($email: String!, $password: String!) {\n  userLogin(email: $email, password: $password) {\n    token\n    user {\n      username\n      email\n      savedEntries\n      favoriteEntries\n      visitedEntries\n      hash\n    }\n  }\n}\n`","import decode from 'jwt-decode';\n\n\nclass AuthService {\n    // get user data\n    getProfile() {\n        return decode(this.getToken());\n    }\n\n\n    loggedIn() {\n\n        const token = this.getToken();\n        return !!token && !this.isTokenExpired(token);\n    }\n\n    isTokenExpired(token) {\n        try {\n            const decoded = decode(token);\n            if (decoded.exp < Date.now() / 1000) {\n                return true;\n            } else return false;\n        } catch (err) {\n            return false;\n        }\n    }\n\n    getToken() {\n        return localStorage.getItem('id_token');\n    }\n\n    login(idToken) {\n        localStorage.setItem('id_token', idToken);\n        window.location.assign('/');\n    }\n\n    logout() {\n        localStorage.removeItem('id_token');\n        window.location.assign('/');\n    }\n}\n\nexport default new AuthService();","import * as React from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { useMutation } from '@apollo/client';\nimport { USER_LOGIN } from '../utils/mutations';\nimport Auth from '../utils/auth';\nimport '@fontsource/roboto/300.css';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/500.css';\nimport '@fontsource/roboto/700.css';\nconst theme = createTheme();\n\n\n\nexport default function SignIn() {\n  const [loginUser, { error, data }] = useMutation(USER_LOGIN);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    // eslint-disable-next-line no-console\n    console.log({\n      email: data.get('email'),\n      password: data.get('password'),\n    });\n    const response = await loginUser({\n      variables: {\n        email: data.get('email'),\n        password: data.get('password'),\n      }\n    });\n    //console.log(response.data.login)\n    if (!response.data.userLogin.token) {\n      throw new Error('something went wrong!');\n    }\n\n    const { token, user } = response.data.userLogin;\n    //console.log(user);\n    Auth.login(token);\n    console.log(user);\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"sm\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 10,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            border: 1,\n            borderColor: 'grey.500',\n            padding: '5rem',\n            borderRadius: '10px',\n            backgroundColor: 'white'\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: 'grey.400' }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n            />\n            <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\n              label=\"Remember me\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2, borderRadius: '6px', zIndex: '0' }}\n              elevation={0}\n            >\n              Sign In\n            </Button>\n            <Grid container>\n              <Grid item xs>\n                <Link href=\"#\" variant=\"body2\">\n                  Forgot password?\n                </Link>\n              </Grid>\n              <Grid item>\n                <Link href=\"/signup\" variant=\"body2\">\n                  {\"Don't have an account? Sign Up\"}\n                </Link>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n}","import * as React from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { useMutation } from '@apollo/client';\nimport { ADD_USER } from '../utils/mutations';\nimport Auth from '../utils/auth';\nimport '@fontsource/roboto/300.css';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/500.css';\nimport '@fontsource/roboto/700.css';\n\n\n\nfunction Copyright(props) {\n  return (\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"#\">\n        Scriber\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst theme = createTheme();\n\nexport default function SignUp() {\n  const [addUser, { error, data }] = useMutation(ADD_USER);\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    let firstName = data.get('firstName');\n    let lastName = data.get('lastName');\n    let username = firstName + ' ' + lastName;\n    const response = await addUser({\n      variables: {\n        username: username,\n        email: data.get('email'),\n        password: data.get('password'),\n      }\n    });\n    //console.log(response.data.login)\n    if (!response.data.addUser.token) {\n      throw new Error('something went wrong!');\n    }\n    console.log(response);\n    const { token, user } = response.data.addUser;\n    //console.log(user);\n    Auth.login(token);\n    console.log(user);\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"sm\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 10,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            border: 1,\n            borderColor: 'grey.500',\n            padding: '5rem',\n            borderRadius: '10px',\n            backgroundColor: 'white'\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: 'grey.400' }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n          <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 3, }} className=\"boxStyle\">\n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  autoComplete=\"fname\"\n                  name=\"firstName\"\n                  required\n                  fullWidth\n                  id=\"firstName\"\n                  label=\"First Name\"\n                  autoFocus\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  required\n                  fullWidth\n                  id=\"lastName\"\n                  label=\"Last Name\"\n                  name=\"lastName\"\n                  autoComplete=\"lname\"\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email Address\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"new-password\"\n                />\n              </Grid>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 4, mb: 2, borderRadius: '6px', zIndex: '0' }}\n              elevation={0}\n            >\n              Sign Up\n            </Button>\n            <Grid container justifyContent=\"flex-end\">\n              <Grid item>\n                <Link href=\"/signin\" variant=\"body2\">\n                  Already have an account? Sign in\n                </Link>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider >\n  );\n}","import { gql } from '@apollo/client';\n\nexport const QUERY_ENTRIES = gql`\nquery Query($hash: String!) {\n  getEntry(hash: $hash) {\n    authors\n    title\n    body\n    timestamp\n    subject\n    views\n  }\n}\n`\n\nexport const QUERY_USERS = gql`\n    query Query($hash: String!) {\n        getUser(hash: $hash) {\n            username\n            favoriteEntrys\n        }\n    }\n`\n\nexport const ME = gql`\nquery Query {\n  me {\n    username\n    savedEntries\n    favoriteEntries\n    visitedEntries\n    hash\n  }\n}\n`\n\nexport const TOP_FIVE = gql`\nquery Query {\n  getTopFive {\n    authors\n    title\n    timestamp\n    subject\n    views\n    hash\n  }\n}\n`","import * as React from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport '@fontsource/roboto/300.css';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/500.css';\nimport '@fontsource/roboto/700.css';\nimport { useMutation } from '@apollo/client';\nimport { ADD_ENTRY } from '../utils/mutations';\nimport { ME } from './../utils/queries';\nimport { useQuery } from '@apollo/client';\nimport CreateIcon from '@mui/icons-material/Create';\nimport VolumeUpIcon from '@mui/icons-material/VolumeUp'\nimport { useState } from 'react';\nimport { useSpeechSynthesis } from 'react-speech-kit';\n\n\n\n\nexport default function WritePage() {\n    const theme = createTheme();\n    const [addEntry, { err, entry }] = useMutation(ADD_ENTRY);\n\n    const { loading, error, data } = useQuery(ME)\n    const [value, setValue] = useState('');\n    const { speak } = useSpeechSynthesis();\n\n    if (loading) {\n        return (\n            <ThemeProvider theme={theme}>\n                <Container component=\"main\" maxWidth=\"sm\">\n                    <CssBaseline />\n                    <h1>loading!</h1>\n                </Container>\n            </ThemeProvider>\n        )\n    }\n    if (error) {\n        console.log(error)\n        return (\n            <ThemeProvider theme={theme}>\n                <Container component=\"main\" maxWidth=\"sm\">\n                    <CssBaseline />\n                    <h1>Error! Must be logged in!</h1>\n                </Container>\n            </ThemeProvider>\n        )\n    }\n\n    /*\n    useEffect(() => {\n        console.log(editorState.getCurrentContent().getPlainText());\n    }, [editorState]);\n    */\n    const handleSave = async (event) => {\n        event.preventDefault();\n        const formData = new FormData(event.currentTarget);\n\n        let user = JSON.stringify([data.me.hash])\n        console.log(user);\n        const response = await addEntry({\n\n            variables: {\n                \"authors\": user,\n                \"title\": formData.get('title'),\n                \"subject\": formData.get('subject'),\n                \"body\": formData.get('entry')\n            }\n        })\n        window.location.assign('/');\n    }\n\n\n    return (\n        <ThemeProvider theme={theme}>\n            <Container component=\"main\" maxWidth=\"md\">\n                <CssBaseline />\n                <Box\n                    sx={{\n                        marginTop: 8,\n                        display: 'flex',\n                        flexDirection: 'column',\n                        alignItems: 'center',\n                    }}\n                >\n                    <Avatar sx={{ m: 1, bgcolor: 'grey.300' }}>\n                        <CreateIcon />\n                    </Avatar>\n                    <Box component=\"form\" noValidate onSubmit={handleSave} sx={{ mt: 3 }}>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    name=\"title\"\n                                    required\n                                    fullWidth\n                                    id=\"title\"\n                                    label=\"Title\"\n                                    autoFocus\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    required\n                                    fullWidth\n                                    id=\"subject\"\n                                    label=\"Subject\"\n                                    name=\"subject\"\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    required\n                                    fullWidth\n                                    name=\"entry\"\n                                    label=\"Thoughts\"\n                                    id=\"entry\"\n                                    multiline\n                                    rows={10}\n                                    defaultValue=\"\"\n                                    variant=\"filled\"\n                                    value={value}\n                                    onChange={(event) => setValue(event.target.value)} />\n                            </Grid>\n                        </Grid>\n                        <Button\n                            type=\"submit\"\n                            variant=\"contained\"\n                            sx={{ mt: 3, mb: 2, borderRadius: '6px', zIndex: '0', width: '150px' }}\n                            elevation={0}\n                        >\n                            Save\n                        </Button>\n                        <Button\n                            color=\"secondary\"\n                            variant=\"contained\"\n                            sx={{ ml: 2, mt: 3, mb: 2, borderRadius: '6px', zIndex: '0' }}\n                            elevation={0}\n                            onClick={() => speak({ text: value })}\n                            startIcon={<VolumeUpIcon />}>\n                            Read Back your Thoughts\n                        </Button>\n                    </Box>\n                </Box>\n            </Container>\n        </ThemeProvider >\n    );\n}\n","import * as React from 'react';\nimport { styled, useTheme } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport MuiDrawer from '@mui/material/Drawer';\nimport MuiAppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport List from '@mui/material/List';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Typography from '@mui/material/Typography';\nimport Divider from '@mui/material/Divider';\nimport IconButton from '@mui/material/IconButton';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport HomeIcon from '@mui/icons-material/Home';\nimport StarIcon from '@mui/icons-material/Star';\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport LogoutIcon from '@mui/icons-material/Logout';\nimport CreateIcon from '@mui/icons-material/Create';\nimport { useHistory } from 'react-router-dom';\nimport Link from '@mui/material/Link';\nimport Auth from '../utils/auth';\nimport LoginIcon from '@mui/icons-material/Login';\n\nconst drawerWidth = 240;\n\nconst openedMixin = (theme) => ({\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n    }),\n    overflowX: 'hidden',\n});\n\nconst closedMixin = (theme) => ({\n    transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: `calc(${theme.spacing(7)} + 1px)`,\n    [theme.breakpoints.up('sm')]: {\n        width: `calc(${theme.spacing(9)} + 1px)`,\n    },\n});\n\nconst DrawerHeader = styled('div')(({ theme }) => ({\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n}));\n\nconst AppBar = styled(MuiAppBar, {\n    shouldForwardProp: (prop) => prop !== 'open',\n})(({ theme, open }) => ({\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n    }),\n    ...(open && {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    }),\n}));\n\nconst Drawer = styled(MuiDrawer, { shouldForwardProp: (prop) => prop !== 'open' })(\n    ({ theme, open }) => ({\n        width: drawerWidth,\n        flexShrink: 0,\n        whiteSpace: 'nowrap',\n        boxSizing: 'border-box',\n        ...(open && {\n            ...openedMixin(theme),\n            '& .MuiDrawer-paper': openedMixin(theme),\n        }),\n        ...(!open && {\n            ...closedMixin(theme),\n            '& .MuiDrawer-paper': closedMixin(theme),\n        }),\n    }),\n);\n\nexport default function MiniDrawer() {\n    let history = useHistory();\n    const theme = useTheme();\n    const [open, setOpen] = React.useState(false);\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n    if (Auth.getToken()) {\n        return (\n            <Box sx={{ display: 'flex' }}>\n                <CssBaseline />\n                <AppBar position=\"fixed\" open={open} elevation={0} sx={{ background: \"white\", borderBottom: '1px solid rgba(0, 0, 0, 0.12)' }}>\n                    <Toolbar>\n                        <IconButton\n                            aria-label=\"open drawer\"\n                            onClick={handleDrawerOpen}\n                            edge=\"start\"\n                            sx={{\n                                marginRight: '36px',\n                                ...(open && { display: 'none' }),\n                                color: 'black'\n                            }}\n                        >\n                            <MenuIcon />\n                        </IconButton>\n                        <Typography variant=\"h6\" noWrap component=\"div\" sx={{ color: 'black' }}>\n                            Scriber\n                        </Typography>\n                    </Toolbar>\n                </AppBar>\n                <Drawer variant=\"permanent\" open={open}>\n                    <DrawerHeader>\n                        <IconButton onClick={handleDrawerClose}>\n                            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n                        </IconButton>\n                    </DrawerHeader>\n                    <Divider />\n                    <List>\n                        <Link href='/'>\n                            <ListItem button key={'Home'}>\n                                <ListItemIcon>\n                                    <HomeIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={'Home'} />\n                            </ListItem>\n                        </ Link>\n                        <Link href='/favorites'>\n                            <ListItem button key={'Favorites'}>\n                                <ListItemIcon>\n                                    <StarIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={'Favorites'} />\n                            </ListItem>\n                        </ Link>\n                        <Link href='/write'>\n                            <ListItem button key={'Write'}>\n                                <ListItemIcon>\n                                    <CreateIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={'Write'} />\n                            </ListItem>\n                        </ Link>\n                    </List>\n                    <Divider />\n                    <List>\n                        <Link href='/profile'>\n                            <ListItem button key={'Profile'}>\n                                <ListItemIcon>\n                                    <AccountCircleIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={'Profile'} />\n                            </ListItem>\n                        </ Link>\n                        <Link href='#'>\n                            <ListItem button key={'Sign Out'} onClick={Auth.logout}>\n                                <ListItemIcon>\n                                    <LogoutIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={'Sign Out'} />\n                            </ListItem>\n                        </ Link>\n                    </List>\n                </Drawer>\n                <Box component=\"main\" sx={{ flexGrow: 1, p: 3 }}>\n                    <DrawerHeader />\n                </Box>\n            </Box >\n        );\n    } else {\n        return (\n            <Box sx={{ display: 'flex' }}>\n                <CssBaseline />\n                <AppBar position=\"fixed\" open={open} elevation={0} sx={{ background: \"white\", borderBottom: '1px solid rgba(0, 0, 0, 0.12)' }}>\n                    <Toolbar>\n                        <IconButton\n                            aria-label=\"open drawer\"\n                            onClick={handleDrawerOpen}\n                            edge=\"start\"\n                            sx={{\n                                marginRight: '36px',\n                                ...(open && { display: 'none' }),\n                                color: 'black'\n                            }}\n                        >\n                            <MenuIcon />\n                        </IconButton>\n                        <Typography variant=\"h6\" noWrap component=\"div\" sx={{ color: 'black' }}>\n                            Scriber\n                        </Typography>\n                    </Toolbar>\n                </AppBar>\n                <Drawer variant=\"permanent\" open={open}>\n                    <DrawerHeader>\n                        <IconButton onClick={handleDrawerClose}>\n                            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n                        </IconButton>\n                    </DrawerHeader>\n                    <Divider />\n                    <List>\n                        <Link href='/'>\n                            <ListItem button key={'Home'}>\n                                <ListItemIcon>\n                                    <HomeIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={'Home'} />\n                            </ListItem>\n                        </ Link>\n                    </List>\n                    <Divider />\n                    <List>\n                        <Link href='/signin'>\n                            <ListItem button key={'Sign In'}>\n                                <ListItemIcon>\n                                    <LoginIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={'Sign In'} />\n                            </ListItem>\n                        </ Link>\n                    </List>\n                </Drawer>\n                <Box component=\"main\" sx={{ flexGrow: 1, p: 3 }}>\n                    <DrawerHeader />\n                </Box>\n            </Box >\n        );\n    }\n}","import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport Accordion from '@mui/material/Accordion';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { TOP_FIVE } from './../utils/queries';\nimport { useQuery } from '@apollo/client'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport '@fontsource/roboto/300.css';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/500.css';\nimport '@fontsource/roboto/700.css';\nconst theme = createTheme();\n\nconst accordionStyle = {\n    marginBottom: '2.5rem',\n    border: '1px solid rgba(0, 0, 0, 0.12)'\n}\n\nconst subjectStyle = {\n    color: 'rgba(0, 0, 0, 0.5)'\n}\n\nfunction ArticleAccordion(article) {\n    article = article.article\n    let link = `read/${article.hash}`\n    return (\n        <div>\n            <Accordion elevation={0} sx={accordionStyle}>\n                <AccordionSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls=\"panel1a-content\"\n                    id=\"panel1a-header\"\n                >\n                    <Typography>{article.title}\n                        <Typography sx={subjectStyle}>{article.subject}</Typography>\n                    </Typography>\n                </AccordionSummary>\n                <AccordionDetails sx={{ backgroundColor: 'grey.100', display: 'flex', flexFlow: 'row wrap', justifyContent: 'space-between' }}>\n                    <Typography>\n                        <Typography sx={subjectStyle}>Author:</Typography>\n                        {article.authors}\n                    </Typography>\n                    <Button variant=\"contained\" href={link} sx={{\n                        marginTop: '0.5rem',\n                        marginBottom: '0.5rem'\n                    }}>\n                        Read\n                    </Button>\n                </AccordionDetails>\n            </Accordion>\n        </div >\n    )\n}\n\nexport default function HomePage() {\n    const { loading, error, data } = useQuery(TOP_FIVE)\n    if (loading) {\n        return (\n            <ThemeProvider theme={theme}>\n                <Container component=\"main\" maxWidth=\"sm\">\n                    <CssBaseline />\n                    <h1>loading!</h1>\n                </Container>\n            </ThemeProvider>\n        )\n    }\n    if (error) {\n        console.log(error)\n        return (\n            <ThemeProvider theme={theme}>\n                <Container component=\"main\" maxWidth=\"sm\">\n                    <CssBaseline />\n                    <h1>Error!</h1>\n                </Container>\n            </ThemeProvider>\n        )\n    }\n    const topFive = data.getTopFive\n    console.log(topFive);\n    return (\n        <ThemeProvider theme={theme}>\n            <Container component=\"main\" maxWidth=\"sm\">\n                <CssBaseline />\n                <h1>Welcome!</h1>\n                <h2>Check out these stories...</h2>\n                {topFive.map((article) =>\n                    <ArticleAccordion article={article} />\n                )}\n            </Container>\n        </ThemeProvider>\n    );\n}","import * as React from 'react';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport Accordion from '@mui/material/Accordion';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { ME } from './../utils/queries';\nimport { useQuery } from '@apollo/client'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport Button from '@mui/material/Button';\nimport '@fontsource/roboto/300.css';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/500.css';\nimport '@fontsource/roboto/700.css';\nconst theme = createTheme();\n\nconst accordionStyle = {\n    marginBottom: '2.5rem',\n    border: '1px solid rgba(0, 0, 0, 0.12)'\n}\n\nconst subjectStyle = {\n    color: 'rgba(0, 0, 0, 0.5)'\n}\n\nfunction ArticleAccordion(article) {\n    article = JSON.parse(article.article)\n    console.log(article.hash);\n    console.log(article.hash);\n    let link = `read/${article.hash}`\n    return (\n        <div>\n            <Accordion elevation={0} sx={accordionStyle}>\n                <AccordionSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls=\"panel1a-content\"\n                    id=\"panel1a-header\"\n                >\n                    <Typography>{article.title}\n                        <Typography sx={subjectStyle}>{article.subject}</Typography>\n                    </Typography>\n                </AccordionSummary>\n                <AccordionDetails sx={{ backgroundColor: 'grey.100', display: 'flex', flexFlow: 'row wrap', justifyContent: 'space-between' }}>\n                    <Typography>\n                        <Typography sx={subjectStyle}>Author:</Typography>\n                        {article.authors}\n                    </Typography>\n                    <Button variant=\"contained\" href={link} sx={{\n                        marginTop: '0.5rem',\n                        marginBottom: '0.5rem'\n                    }}>\n                        Read\n                    </Button>\n                </AccordionDetails>\n            </Accordion>\n        </div >\n    )\n}\n\nexport default function HomePage() {\n    const { loading, error, data } = useQuery(ME)\n    if (loading) {\n        return (\n            <ThemeProvider theme={theme}>\n                <Container component=\"main\" maxWidth=\"sm\">\n                    <CssBaseline />\n                    <h1>loading!</h1>\n                </Container>\n            </ThemeProvider>\n        )\n    }\n    if (error) {\n        console.log(error)\n        return (\n            <ThemeProvider theme={theme}>\n                <Container component=\"main\" maxWidth=\"sm\">\n                    <CssBaseline />\n                    <h1>Error! Must be logged in!</h1>\n                </Container>\n            </ThemeProvider>\n        )\n    }\n    //const topFive = data.getTopFive\n    //console.log(topFive);\n    //console.log(data.me);\n    let topFive = data.me.savedEntries\n    return (\n        <ThemeProvider theme={theme}>\n            <Container component=\"main\" maxWidth=\"sm\">\n                <CssBaseline />\n                <h1>{data.me.username}</h1>\n                <h2>Here are your thoughts...</h2>\n                {topFive.map((article) =>\n                    <ArticleAccordion article={article} />\n                )}\n            </Container>\n        </ThemeProvider>\n    );\n}","import * as React from 'react';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport Accordion from '@mui/material/Accordion';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { TOP_FIVE, ME } from './../utils/queries';\nimport { useQuery } from '@apollo/client'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport Button from '@mui/material/Button';\nimport '@fontsource/roboto/300.css';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/500.css';\nimport '@fontsource/roboto/700.css';\n\nconst theme = createTheme();\n\nconst accordionStyle = {\n    marginBottom: '2.5rem',\n    border: '1px solid rgba(0, 0, 0, 0.12)'\n}\n\nconst subjectStyle = {\n    color: 'rgba(0, 0, 0, 0.5)'\n}\n\nfunction ArticleAccordion(article) {\n    article = JSON.parse(article.article)\n    let link = `read/${article.hash}`\n    return (\n        <div>\n            <Accordion elevation={0} sx={accordionStyle}>\n                <AccordionSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls=\"panel1a-content\"\n                    id=\"panel1a-header\"\n                >\n                    <Typography>{article.title}\n                        <Typography sx={subjectStyle}>{article.subject}</Typography>\n                    </Typography>\n                </AccordionSummary>\n                <AccordionDetails sx={{ backgroundColor: 'grey.100', display: 'flex', flexFlow: 'row wrap', justifyContent: 'space-between' }}>\n                    <Typography>\n                        <Typography sx={subjectStyle}>Author:</Typography>\n                        {article.authors}\n                    </Typography>\n                    <Button variant=\"contained\" href={link} sx={{\n                        marginTop: '0.5rem',\n                        marginBottom: '0.5rem'\n                    }}>\n                        Read\n                    </Button>\n                </AccordionDetails>\n            </Accordion>\n        </div >\n    )\n}\n\nexport default function FavoritePage() {\n    const { loading, error, data } = useQuery(ME)\n    if (loading) {\n        return (\n            <ThemeProvider theme={theme}>\n                <Container component=\"main\" maxWidth=\"sm\">\n                    <CssBaseline />\n                    <h1>loading!</h1>\n                </Container>\n            </ThemeProvider>\n        )\n    }\n    if (error) {\n        console.log(error)\n        return (\n            <ThemeProvider theme={theme}>\n                <Container component=\"main\" maxWidth=\"sm\">\n                    <CssBaseline />\n                    <h1>Error! Must be logged in!</h1>\n                </Container>\n            </ThemeProvider>\n        )\n    }\n    //const topFive = data.getTopFive\n    //console.log(topFive);\n    //console.log(data.me);\n    let topFive = data.me.favoriteEntries\n    return (\n        <ThemeProvider theme={theme}>\n            <Container component=\"main\" maxWidth=\"sm\">\n                <CssBaseline />\n                <h1>{data.me.username}</h1>\n                <h2>Here are your favorites...</h2>\n                {topFive.map((article) =>\n                    <ArticleAccordion article={article} />\n                )}\n            </Container>\n        </ThemeProvider>\n    );\n}","import * as React from 'react';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport Accordion from '@mui/material/Accordion';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport Button from '@mui/material/Button';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { useParams } from 'react-router-dom';\nimport { QUERY_ENTRIES } from './../utils/queries';\nimport { useQuery } from '@apollo/client'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport '@fontsource/roboto/300.css';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/500.css';\nimport '@fontsource/roboto/700.css';\nimport CreateIcon from '@mui/icons-material/Create';\nimport VolumeUpIcon from '@mui/icons-material/VolumeUp'\nimport { useState } from 'react';\nimport { useSpeechSynthesis } from 'react-speech-kit';\nconst theme = createTheme();\n\nconst accordionStyle = {\n    marginBottom: '2.5rem',\n    border: '1px solid rgba(0, 0, 0, 0.12)'\n}\n\nconst subjectStyle = {\n    color: 'rgba(0, 0, 0, 0.5)'\n}\n\nfunction ArticleAccordion(article) {\n    article = article.article\n\n    return (\n        <div>\n            <Accordion elevation={0} sx={accordionStyle}>\n                <AccordionSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls=\"panel1a-content\"\n                    id=\"panel1a-header\"\n                >\n                    <Typography>{article.title}\n                        <Typography sx={subjectStyle}>{article.subject}</Typography>\n                    </Typography>\n                </AccordionSummary>\n                <AccordionDetails sx={{ backgroundColor: 'grey.100' }}>\n                    <Typography>\n                        <Typography sx={subjectStyle}>Author:</Typography>\n                        {article.authors}\n                    </Typography>\n                </AccordionDetails>\n            </Accordion>\n        </div >\n    )\n}\n\nexport default function ReadPage(articleHash) {\n    const [value, setValue] = useState('');\n    const { speak } = useSpeechSynthesis();\n    const { id } = useParams();\n    const { loading, error, data } = useQuery(QUERY_ENTRIES, {\n        variables: {\n            \"hash\": id\n        },\n    })\n    if (loading) {\n        return (\n            <ThemeProvider theme={theme}>\n                <Container component=\"main\" maxWidth=\"sm\">\n                    <CssBaseline />\n                    <h1>loading!</h1>\n                </Container>\n            </ThemeProvider>\n        )\n    }\n    if (error) {\n        console.log(error)\n        return (\n            <ThemeProvider theme={theme}>\n                <Container component=\"main\" maxWidth=\"sm\">\n                    <CssBaseline />\n                    <h1>Error!</h1>\n                </Container>\n            </ThemeProvider>\n        )\n    }\n\n    let article = data.getEntry\n    return (\n        <ThemeProvider theme={theme}>\n            <Container component=\"main\" maxWidth=\"sm\">\n                <CssBaseline />\n                <h1>{article.title}</h1>\n                <h2>{article.authors[0]}</h2>\n                <Typography>\n                    {article.body}\n                </Typography>\n                <Button\n                    color=\"secondary\"\n                    variant=\"contained\"\n                    sx={{ mt: 3, mb: 2, borderRadius: '6px', zIndex: '0' }}\n                    elevation={0}\n                    onClick={() => speak({ text: article.body })}\n                    startIcon={<VolumeUpIcon />}>\n                    Hear this story\n                </Button>\n            </Container>\n        </ThemeProvider>\n    );\n}","import * as React from 'react';\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport Link from '@mui/material/Link';\nimport SignIn from './pages/signIn';\nimport SignUp from './pages/signUp';\nimport TextEditor from './pages/textEditor';\nimport NavBar from './components/NavBar'\nimport HomePage from './pages/home'\nimport Profile from './pages/profile'\nimport Favorites from './pages/favorites'\nimport Read from './pages/read'\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport '@fontsource/roboto/300.css';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/500.css';\nimport '@fontsource/roboto/700.css';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" sx={{\n      padding: '5rem'\n    }}>\n      {'Copyright © '}\n      < Link color=\"inherit\" href=\"#\" >\n        Scriber\n      </ Link > {' '}\n      {new Date().getFullYear()}.\n    </Typography >\n  );\n}\n\nexport default function App() {\n  return (\n    <main>\n      <NavBar />\n      <Router>\n        <Route exact path=\"/\">\n          <HomePage />\n        </Route>\n        <Route exact path=\"/write\">\n          <TextEditor />\n        </Route>\n        <Route exact path=\"/signin\">\n          <SignIn />\n        </Route>\n        <Route exact path=\"/signup\">\n          <SignUp />\n        </Route>\n        <Route exact path=\"/profile\">\n          <Profile />\n        </Route>\n        <Route exact path=\"/favorites\">\n          <Favorites />\n        </Route>\n        <Route exact path=\"/read/:id\" component={Read}>\n        </Route>\n      </Router>\n      <Copyright />\n    </main>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { setContext } from \"@apollo/client/link/context\";\nimport { ApolloClient, InMemoryCache, ApolloProvider, createHttpLink } from \"@apollo/client\";\n\nconst httpLink = createHttpLink({\n  uri: 'http://localhost:4052/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem('id_token');\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <React.Fragment>\n      {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n      <CssBaseline />\n      <App />\n    </React.Fragment>\n  </ApolloProvider>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}